[{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://nlmixr2.github.io/nlmixr2extra/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Fidler. Author, maintainer. Vipul Mann. Author. Vishal Sarsani. Author. Christian Bartels. Contributor.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fidler M, Xiong Y, Schoemaker R, Wilkins J, Trame M, Hooijmaijers R, Post T, Wang W (2022). nlmixr: Nonlinear Mixed Effects Models Population Pharmacokinetics Pharmacodynamics. R package version 2.0.7, https://CRAN.R-project.org/package=nlmixr. Fidler M, Wilkins J, Hooijmaijers R, Post T, Schoemaker R, Trame M, Xiong Y, Wang W (2019). “Nonlinear Mixed-Effects Model Development Simulation Using nlmixr Related R Open-Source Packages.” CPT: Pharmacometrics \\& Systems Pharmacology, 8(9), 621–633. https://doi.org/10.1002/psp4.12445. Schoemaker R, Fidler M, Laveille C, Wilkins J, Hooijmaijers R, Post T, Trame M, Xiong Y, Wang W (2019). “Performance SAEM FOCEI Algorithms Open-Source, Nonlinear Mixed Effect Modeling Tool nlmixr.” CPT: Pharmacometrics \\& Systems Pharmacology, 8(12), 923–930. https://doi.org/10.1002/psp4.12471.","code":"@Manual{,   title = {{nlmixr}: Nonlinear Mixed Effects Models in Population Pharmacokinetics and Pharmacodynamics},   author = {Matthew Fidler and Yuan Xiong and Rik Schoemaker and Justin Wilkins and Mirjam Trame and Richard Hooijmaijers and Teun Post and Wenping Wang},   year = {2022},   note = {R package version 2.0.7},   url = {https://CRAN.R-project.org/package=nlmixr}, } @Article{,   title = {Nonlinear Mixed-Effects Model Development and Simulation Using nlmixr and Related R Open-Source Packages},   author = {Matthew Fidler and Justin Wilkins and Richard Hooijmaijers and Teun Post and Rik Schoemaker and Mirjam Trame and Yuan Xiong and Wenping Wang},   journal = {CPT: Pharmacometrics \\& Systems Pharmacology},   year = {2019},   volume = {8},   pages = {621--633},   number = {9},   month = {sep},   abstract = {nlmixr is a free and open-source R package for fitting nonlinear pharmacokinetic (PK), pharmacodynamic (PD), joint PK-PD, and quantitative systems pharmacology mixed-effects models. Currently, nlmixr is capable of fitting both traditional compartmental PK models as well as more complex models implemented using ordinary differential equations. We believe that, over time, it will become a capable, credible alternative to commercial software tools, such as NONMEM, Monolix, and Phoenix NLME.},   address = {Hoboken},   publisher = {John Wiley and Sons Inc.},   url = {https://doi.org/10.1002/psp4.12445}, } @Article{,   title = {Performance of the SAEM and FOCEI Algorithms in the Open-Source, Nonlinear Mixed Effect Modeling Tool nlmixr},   author = {Rik Schoemaker and Matthew Fidler and Christian Laveille and Justin Wilkins and Richard Hooijmaijers and Teun Post and Mirjam Trame and Yuan Xiong and Wenping Wang},   journal = {CPT: Pharmacometrics \\& Systems Pharmacology},   year = {2019},   volume = {8},   pages = {923--930},   number = {12},   month = {dec},   abstract = {The free and open-source package nlmixr implements pharmacometric nonlinear mixed effects model parameter estimation in R. It provides a uniform language to define pharmacometric models using ordinary differential equations. Performances of the stochastic approximation expectation-maximization (SAEM) and first order-conditional estimation with interaction (FOCEI) algorithms in nlmixr were compared with those found in the industry standards, Monolix and NONMEM, using the following two scenarios: a simple model fit to 500 sparsely sampled data sets and a range of more complex compartmental models with linear and nonlinear clearance fit to data sets with rich sampling. Estimation results obtained from nlmixr for FOCEI and SAEM matched the corresponding output from NONMEM/FOCEI and Monolix/SAEM closely both in terms of parameter estimates and associated standard errors. These results indicate that nlmixr may provide a viable alternative to existing tools for pharmacometric parameter estimation.},   url = {https://doi.org/10.1002/psp4.12471}, }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/index.html","id":"nlmixr2extra","dir":"","previous_headings":"","what":"Nonlinear Mixed Effects Models in Population PK/PD, Extra Support\n    Functions","title":"Nonlinear Mixed Effects Models in Population PK/PD, Extra Support\n    Functions","text":"goal nlmixr2extra provide tools help common pharmacometric tasks nlmixr2 models like bootstrapping, covariate selection etc.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Nonlinear Mixed Effects Models in Population PK/PD, Extra Support\n    Functions","text":"can install development version nlmixr2extra GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"nlmixr2/nlmixr2data\") remotes::install_github(\"nlmixr2/lotri\") remotes::install_github(\"nlmixr2/rxode2\") remotes::install_github(\"nlmixr2/nlmixr2est\") remotes::install_github(\"nlmixr2/nlmixr2extra\")"},{"path":"https://nlmixr2.github.io/nlmixr2extra/index.html","id":"example-of-a-bootstrapfit","dir":"","previous_headings":"","what":"Example of a bootstrapFit()","title":"Nonlinear Mixed Effects Models in Population PK/PD, Extra Support\n    Functions","text":"basic example bootstrapping provided package","code":"library(nlmixr2est) library(nlmixr2extra) ## basic example code ## The basic model consiss of an ini block that has initial estimates one.compartment <- function() {   ini({     tka <- 0.45 # Log Ka     tcl <- 1 # Log Cl     tv <- 3.45    # Log V     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   # and a model block with the error sppecification and model specification   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v     cp ~ add(add.sd)   }) }  ## The fit is performed by the function nlmixr/nlmix2 specifying the model, data and estimate fit <- nlmixr2(one.compartment, theo_sd,  est=\"saem\", saemControl(print=0)) #>   #>   #>  #> ℹ parameter labels from comments will be replaced by 'label()' #>  #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of saem model... #> ✔ done #> → finding duplicate expressions in saem model... #> → optimizing duplicate expressions in saem model... #> ✔ done #> Calculating covariance matrix #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of saem model... #> ✔ done #> → finding duplicate expressions in saem predOnly model 0... #> → finding duplicate expressions in saem predOnly model 1... #> → optimizing duplicate expressions in saem predOnly model 1... #> → finding duplicate expressions in saem predOnly model 2... #> ✔ done #>  #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 5952 #> → compress phiM in nlmixr2 object, save 62360 #> → compress parHist in nlmixr2 object, save 9560 #> → compress saem0 in nlmixr2 object, save 24584  fit2 <- suppressMessages(bootstrapFit(fit)) fit2 #> ── nlmixr SAEM OBJF by FOCEi approximation ── #>  #>  Gaussian/Laplacian Likelihoods: AIC(fit) or fit$objf etc.  #>  FOCEi CWRES & Likelihoods: addCwres(fit)  #>  #> ── Time (sec fit$time): ── #>  #>            setup table compress    other covariance #> elapsed 0.001151 0.024    0.017 3.042849      0.074 #>  #> ── Population Parameters (fit$parFixed or fit$parFixedDf): ── #>  #>        Parameter  Est.     SE %RSE Back-transformed(95%CI) BSV(CV%) Shrink(SD)% #> tka       Log Ka 0.454  0.207 45.7       1.57 (1.05, 2.36)     71.5   -0.0203%  #> tcl       Log Cl  1.02 0.0771 7.59       2.76 (2.37, 3.21)     27.6      3.46%  #> tv         Log V  3.45 0.0453 1.31       31.5 (28.8, 34.4)     13.4      9.89%  #> add.sd           0.693                               0.693                      #>   #>   Covariance Type (fit$covMethod): boot200 #>     other calculated covs (setCov()): linFim #>   No correlations in between subject variability (BSV) matrix #>   Full BSV covariance (fit$omega) or correlation (fit$omegaR; diagonals=SDs)  #>   Distribution stats (mean/skewness/kurtosis/p-value) available in fit$shrink  #>  #> ── Fit Data (object fit is a modified tibble): ── #> # A tibble: 132 × 19 #>   ID     TIME    DV  PRED    RES IPRED   IRES  IWRES eta.ka eta.cl   eta.v    cp #>   <fct> <dbl> <dbl> <dbl>  <dbl> <dbl>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl> <dbl> #> 1 1      0     0.74  0     0.74   0     0.74   1.07   0.103 -0.491 -0.0820  0    #> 2 1      0.25  2.84  3.27 -0.426  3.87 -1.03  -1.48   0.103 -0.491 -0.0820  3.87 #> 3 1      0.57  6.57  5.85  0.723  6.82 -0.246 -0.356  0.103 -0.491 -0.0820  6.82 #> # … with 129 more rows, and 7 more variables: depot <dbl>, center <dbl>, #> #   ka <dbl>, cl <dbl>, v <dbl>, tad <dbl>, dosenum <dbl>"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adaptivelassoCoefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Adaptive lasso coefficients after finding optimal t — adaptivelassoCoefficients","title":"Return Adaptive lasso coefficients after finding optimal t — adaptivelassoCoefficients","text":"Return Adaptive lasso coefficients finding optimal t","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adaptivelassoCoefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Adaptive lasso coefficients after finding optimal t — adaptivelassoCoefficients","text":"","code":"adaptivelassoCoefficients(   fit,   varsVec,   covarsVec,   catvarsVec,   constraint = 1e-08,   stratVar = NULL,   ... )"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adaptivelassoCoefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Adaptive lasso coefficients after finding optimal t — adaptivelassoCoefficients","text":"fit nlmixr2 fit. varsVec character vector variables need added covarsVec character vector covariates need added catvarsVec character vector categorical covariates need added constraint theta cutoff. cutoff theta fixed zero. stratVar variable stratify cross-validation. ... parameters passed optimalTvaluelasso","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adaptivelassoCoefficients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Adaptive lasso coefficients after finding optimal t — adaptivelassoCoefficients","text":"return data frame final lasso coefficients","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adaptivelassoCoefficients.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return Adaptive lasso coefficients after finding optimal t — adaptivelassoCoefficients","text":"Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adaptivelassoCoefficients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Adaptive lasso coefficients after finding optimal t — adaptivelassoCoefficients","text":"","code":"# \\donttest{  one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- log(c(0, 2.7, 100)) # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45; label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  d <- nlmixr2data::theo_sd d$SEX <-0 d$SEX[d$ID<=6] <-1  fit <-  nlmixr2(    one.cmt, d,    est = \"focei\", control = nlmixr2est::foceiControl(print = 0)  ) #>   #>   #>   #> ℹ parameter labels from comments will be replaced by 'label()' #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> rxode2 2.0.8 using 1 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()` #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7184 #> → compress parHist in nlmixr2 object, save 2032 varsVec <- c(\"ka\",\"cl\",\"v\") covarsVec <- c(\"WT\") catvarsVec <- c(\"SEX\")  # Adaptive Lasso coefficients:  lassoDf <- adaptivelassoCoefficients(fit, varsVec, covarsVec, catvarsVec) #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7096 #> → compress parHist in nlmixr2 object, save 3872 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3256 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6640 #> → compress parHist in nlmixr2 object, save 3424 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3496 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6768 #> → compress parHist in nlmixr2 object, save 3864 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6656 #> → compress parHist in nlmixr2 object, save 3448 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3480 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 4040 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.05 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 4840 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 3872 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3848 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7096 #> → compress parHist in nlmixr2 object, save 3688 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3256 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6632 #> → compress parHist in nlmixr2 object, save 3864 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6632 #> → compress parHist in nlmixr2 object, save 3648 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3504 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 3480 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3728 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3336 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3984 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.15 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3848 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 4136 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3544 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7120 #> → compress parHist in nlmixr2 object, save 4264 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 3576 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3504 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 4000 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 4232 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 4592 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7160 #> → compress parHist in nlmixr2 object, save 3904 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6648 #> → compress parHist in nlmixr2 object, save 4064 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7104 #> → compress parHist in nlmixr2 object, save 3976 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3232 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.25 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6984 #> → compress parHist in nlmixr2 object, save 3160 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7160 #> → compress parHist in nlmixr2 object, save 4384 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3576 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 4376 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 4040 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6576 #> → compress parHist in nlmixr2 object, save 3520 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3536 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.05 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3312 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3408 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7104 #> → compress parHist in nlmixr2 object, save 3512 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3240 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6640 #> → compress parHist in nlmixr2 object, save 4344 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3480 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6624 #> → compress parHist in nlmixr2 object, save 5256 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6592 #> → compress parHist in nlmixr2 object, save 3576 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3576 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6632 #> → compress parHist in nlmixr2 object, save 3200 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3496 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3912 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3840 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3712 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.15 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 4184 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3408 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6624 #> → compress parHist in nlmixr2 object, save 3408 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 4672 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3496 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3752 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 3520 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3504 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 5296 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3624 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 3680 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3496 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3368 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.25 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> Theta reset (zero/bad gradient values); Switch to bobyqa #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6984 #> → compress parHist in nlmixr2 object, save 9024 # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/addCatCovariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Make dummy variable cols and updated covarsVec — addCatCovariates","title":"Make dummy variable cols and updated covarsVec — addCatCovariates","text":"Make dummy variable cols updated covarsVec","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/addCatCovariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make dummy variable cols and updated covarsVec — addCatCovariates","text":"","code":"addCatCovariates(data, covarsVec, catcovarsVec)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/addCatCovariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make dummy variable cols and updated covarsVec — addCatCovariates","text":"data data frame used analysis covarsVec character vector covariates need added catcovarsVec character vector categorical covariates need added","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/addCatCovariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make dummy variable cols and updated covarsVec — addCatCovariates","text":"return updated Data along updated covarsVec","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/addCatCovariates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make dummy variable cols and updated covarsVec — addCatCovariates","text":"Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/addorremoveCovariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Add covariate — addorremoveCovariate","title":"Add covariate — addorremoveCovariate","text":"Add covariate","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/addorremoveCovariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add covariate — addorremoveCovariate","text":"","code":"addorremoveCovariate(ui, varName, covariate, add = TRUE)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/addorremoveCovariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add covariate — addorremoveCovariate","text":"ui compiled rxode2 nlmir2 model fit varName variable name given covariate added covariate covariate needs string constructed add boolean indicating covariate needs added removed.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/addorremoveCovariate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add covariate — addorremoveCovariate","text":"Matthew Fidler, Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adjustedlassoCoefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Adjusted adaptive lasso coefficients after finding optimal t — adjustedlassoCoefficients","title":"Return Adjusted adaptive lasso coefficients after finding optimal t — adjustedlassoCoefficients","text":"Return Adjusted adaptive lasso coefficients finding optimal t","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adjustedlassoCoefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Adjusted adaptive lasso coefficients after finding optimal t — adjustedlassoCoefficients","text":"","code":"adjustedlassoCoefficients(   fit,   varsVec,   covarsVec,   catvarsVec,   constraint = 1e-08,   stratVar = NULL,   ... )"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adjustedlassoCoefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Adjusted adaptive lasso coefficients after finding optimal t — adjustedlassoCoefficients","text":"fit nlmixr2 fit. varsVec character vector variables need added covarsVec character vector covariates need added catvarsVec character vector categorical covariates need added constraint theta cutoff. cutoff theta fixed zero. stratVar variable stratify cross-validation. ... parameters passed optimalTvaluelasso","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adjustedlassoCoefficients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Adjusted adaptive lasso coefficients after finding optimal t — adjustedlassoCoefficients","text":"return data frame final lasso coefficients","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adjustedlassoCoefficients.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return Adjusted adaptive lasso coefficients after finding optimal t — adjustedlassoCoefficients","text":"Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/adjustedlassoCoefficients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Adjusted adaptive lasso coefficients after finding optimal t — adjustedlassoCoefficients","text":"","code":"# \\donttest{  one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- log(c(0, 2.7, 100)) # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45; label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  d <- nlmixr2data::theo_sd d$SEX <-0 d$SEX[d$ID<=6] <-1  fit <- nlmixr2(one.cmt, d, \"focei\") #>   #>   #>   #> ℹ parameter labels from comments will be replaced by 'label()' #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7184 #> → compress parHist in nlmixr2 object, save 2032 varsVec <- c(\"ka\",\"cl\",\"v\") covarsVec <- c(\"WT\") catvarsVec <- c(\"SEX\")  # Adaptive Lasso coefficients:  lassoDf <- adjustedlassoCoefficients(fit,varsVec,covarsVec,catvarsVec) #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6984 #> → compress parHist in nlmixr2 object, save 3168 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3288 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3184 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3568 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 5200 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3272 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6592 #> → compress parHist in nlmixr2 object, save 3664 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.05 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3864 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 4840 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3304 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3096 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3424 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6640 #> → compress parHist in nlmixr2 object, save 3408 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7080 #> → compress parHist in nlmixr2 object, save 3448 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6632 #> → compress parHist in nlmixr2 object, save 4112 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6656 #> → compress parHist in nlmixr2 object, save 3432 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3536 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3640 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 4400 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.15 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 4248 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 4336 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 3632 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3504 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3312 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3728 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 3768 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3576 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6592 #> → compress parHist in nlmixr2 object, save 3752 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3360 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3904 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.25 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → optimizing duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> Theta reset (zero/bad gradient values); Switch to bobyqa #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6984 #> → compress parHist in nlmixr2 object, save 8616 # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/backwardSearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Backward covariate search — backwardSearch","title":"Backward covariate search — backwardSearch","text":"Backward covariate search","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/backwardSearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backward covariate search — backwardSearch","text":"","code":"backwardSearch(   varsVec,   covarsVec,   catvarsVec = NULL,   fitorig,   fitupdated,   pVal = 0.01,   reFitCovars = FALSE,   outputDir,   restart = FALSE )"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/backwardSearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backward covariate search — backwardSearch","text":"varsVec character vector variables need added covarsVec character vector covariates need added catvarsVec character vector categorical covariates need added fitorig original 'fit' object forward search fitupdated updated 'fit' object, , forward search pVal p-value used selecting covariates forward search reFitCovars covariates added performing backward search - useful directly performing backward search without forward search; default FALSE outputDir name output directory stores covariate search result restart boolean controls search restarted; default FALSE","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/backwardSearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backward covariate search — backwardSearch","text":"returns updated 'fit' object end backward search table information covariates tested","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/backwardSearch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Backward covariate search — backwardSearch","text":"Vipul Mann, Matthew Fidler, Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce delta objective function for boostrap — bootplot","title":"Produce delta objective function for boostrap — bootplot","text":"Produce delta objective function boostrap Produce delta objective function boostrap","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce delta objective function for boostrap — bootplot","text":"","code":"bootplot(x, ...)  # S3 method for nlmixr2FitCore bootplot(x, ...)  bootplot(x, ...)  # S3 method for nlmixr2FitCore bootplot(x, ...)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce delta objective function for boostrap — bootplot","text":"x fit object ... parameters","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce delta objective function for boostrap — bootplot","text":"Fit traceplot nothing. Fit traceplot nothing.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Produce delta objective function for boostrap — bootplot","text":"R Niebecker,  MO Karlsson. (2013) datasets NLME models large enough bootstrap provide reliable parameter uncertainty distributions? PAGE 2013. https://www.page-meeting.org/?abstract=2899 R Niebecker,  MO Karlsson. (2013) datasets NLME models large enough bootstrap provide reliable parameter uncertainty distributions? PAGE 2013. https://www.page-meeting.org/?abstract=2899","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce delta objective function for boostrap — bootplot","text":"Vipul Mann,  Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootstrapFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap nlmixr2 fit — bootstrapFit","title":"Bootstrap nlmixr2 fit — bootstrapFit","text":"Bootstrap input dataset rerun model get confidence bounds aggregated parameters Bootstrap input dataset rerun model get confidence bounds aggregated parameters","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootstrapFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap nlmixr2 fit — bootstrapFit","text":"","code":"bootstrapFit(   fit,   nboot = 200,   nSampIndiv,   stratVar,   stdErrType = c(\"perc\", \"se\"),   ci = 0.95,   pvalues = NULL,   restart = FALSE,   plotHist = FALSE,   fitName = as.character(substitute(fit)) )  bootstrapFit(   fit,   nboot = 200,   nSampIndiv,   stratVar,   stdErrType = c(\"perc\", \"se\"),   ci = 0.95,   pvalues = NULL,   restart = FALSE,   plotHist = FALSE,   fitName = as.character(substitute(fit)) )"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootstrapFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap nlmixr2 fit — bootstrapFit","text":"fit nlmixr2 fit object nboot integer giving number bootstrapped models fit; default value 200 nSampIndiv integer specifying number samples bootstrapped sample; default number unique subjects original dataset stratVar Variable original dataset stratify ; useful distinguish sparse full sampling features may wish keep distinct bootstrap stdErrType gives standard error type updated standard errors; current possibilities : \"perc\" gives standard errors percentiles (default) \"se\" gives standard errors traditional formula. ci Confidence interval level calculate.  Default 0.95 95 percent confidence interval pvalues vector pvalues indicating probability subject get selected; default value NULL implying probability subject restart boolean try restart interrupted incomplete boostrap.  default FALSE plotHist boolean indicating histogram plot assess well bootstrap .  default turned (FALSE) fitName fit name used name boostrap files.  default fit provided though something else.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootstrapFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap nlmixr2 fit — bootstrapFit","text":"Nothing, called side effects; original fit updated bootstrap confidence bands Nothing, called side effects; original fit updated bootstrap confidence bands","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootstrapFit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bootstrap nlmixr2 fit — bootstrapFit","text":"Vipul Mann, Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/bootstrapFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap nlmixr2 fit — bootstrapFit","text":"","code":"# \\donttest{  one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- 1 # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45     label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  fit <- nlmixr2(one.cmt, nlmixr2data::theo_sd, \"focei\") #>   #>   #>   #> ℹ parameter labels from comments will be replaced by 'label()' #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 5952 #> → compress parHist in nlmixr2 object, save 2088  withr::with_tempdir({ # Run example in temp dir  bootstrapFit(fit, nboot = 5, restart = TRUE) # overwrites any of the existing data or model files bootstrapFit(fit, nboot = 7) # resumes fitting using the stored data and model files  # Note this resumes because the total number of bootstrap samples is not 50  bootstrapFit(fit, nboot=50)  # Note the boostrap standard error and variance/covariance matrix is retained. # If you wish to switch back you can change the covariance matrix by  nlmixr2est::setCov(fit,\"r,s\")  # And change it back again  nlmixr2est::setCov(fit,\"boot50\")  # This change will affect any simulations with uncertainty in their parameters  # You may also do a chi-square diagnostic plot check for the bootstrap with  bootplot(fit)  }) #>  #> ── Running nlmixr2 for model index: 1 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 2 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 3 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 4 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 5 ────────────────────────────────────────── #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object fit #> ✔ resuming bootstrap data sampling using data at ./nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #> ✔ resuming bootstrap model fitting using data and models stored at /tmp/RtmpcCEJGQ/file389a1431b8ad/nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #>  #> ── Running nlmixr2 for model index: 6 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 7 ────────────────────────────────────────── #>   #>   #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object fit #> ✔ resuming bootstrap data sampling using data at ./nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #> ✔ resuming bootstrap model fitting using data and models stored at /tmp/RtmpcCEJGQ/file389a1431b8ad/nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #>  #> ── Running nlmixr2 for model index: 8 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 9 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 10 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 11 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 12 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 13 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 14 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 15 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 16 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 17 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 18 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 19 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 20 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 21 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 22 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 23 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 24 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 25 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 26 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 27 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 28 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 29 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 30 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 31 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 32 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 33 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 34 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 35 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 36 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 37 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 38 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 39 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 40 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 41 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 42 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 43 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 44 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 45 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 46 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 47 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 48 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 49 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 50 ───────────────────────────────────────── #>   #>   #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object fit #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object fit #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object fit #> ✔ resuming bootstrap data sampling using data at ./nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #> ✔ resuming bootstrap model fitting using data and models stored at /tmp/RtmpcCEJGQ/file389a1431b8ad/nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #>  #> ── Loading/Calculating Δ Objective function ──────────────────────────────────── #>  #> ── Running bootstrap estimates on original data for model index: 1 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 2 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 3 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 4 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 5 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 6 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 7 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 8 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 9 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 10 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 11 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 12 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 13 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 14 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 15 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 16 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 17 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 18 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 19 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 20 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 21 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 22 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 23 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 24 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 25 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 26 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 27 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 28 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 29 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 30 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 31 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 32 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 33 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 34 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 35 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 36 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 37 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 38 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 39 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 40 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 41 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 42 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 43 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 44 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 45 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 46 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 47 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 48 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 49 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 50 ──────────── #>   #>   #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object x   # }  # \\donttest{  one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- 1 # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45     label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  fit <- nlmixr2(one.cmt, nlmixr2data::theo_sd, \"focei\") #>   #>   #>   #> ℹ parameter labels from comments will be replaced by 'label()' #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 5952 #> → compress parHist in nlmixr2 object, save 2088  withr::with_tempdir({ # Run example in temp dir  bootstrapFit(fit, nboot = 5, restart = TRUE) # overwrites any of the existing data or model files bootstrapFit(fit, nboot = 7) # resumes fitting using the stored data and model files  # Note this resumes because the total number of bootstrap samples is not 50  bootstrapFit(fit, nboot=50)  # Note the boostrap standard error and variance/covariance matrix is retained. # If you wish to switch back you can change the covariance matrix by  nlmixr2est::setCov(fit,\"r,s\")  # And change it back again  nlmixr2est::setCov(fit,\"boot50\")  # This change will affect any simulations with uncertainty in their parameters  # You may also do a chi-square diagnostic plot check for the bootstrap with  bootplot(fit)  }) #>  #> ── Running nlmixr2 for model index: 1 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 2 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 3 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 4 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 5 ────────────────────────────────────────── #>   #>   #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object fit #> ✔ resuming bootstrap data sampling using data at ./nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #> ✔ resuming bootstrap model fitting using data and models stored at /tmp/RtmpcCEJGQ/file389a7046245c/nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #>  #> ── Running nlmixr2 for model index: 6 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 7 ────────────────────────────────────────── #>   #>   #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object fit #> ✔ resuming bootstrap data sampling using data at ./nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #> ✔ resuming bootstrap model fitting using data and models stored at /tmp/RtmpcCEJGQ/file389a7046245c/nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #>  #> ── Running nlmixr2 for model index: 8 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 9 ────────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 10 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 11 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 12 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 13 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 14 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 15 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 16 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 17 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 18 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 19 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 20 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 21 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 22 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 23 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 24 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 25 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 26 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 27 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 28 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 29 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 30 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 31 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 32 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 33 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 34 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 35 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 36 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 37 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 38 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 39 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 40 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 41 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 42 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 43 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 44 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 45 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 46 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 47 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 48 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 49 ───────────────────────────────────────── #>   #>   #>  #> ── Running nlmixr2 for model index: 50 ───────────────────────────────────────── #>   #>   #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object fit #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object fit #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object fit #> ✔ resuming bootstrap data sampling using data at ./nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #> ✔ resuming bootstrap model fitting using data and models stored at /tmp/RtmpcCEJGQ/file389a7046245c/nlmixr2BootstrapCache_fit_1c9f8c0b9a48e11bf7de1ef5ea2bb675 #>  #> ── Loading/Calculating Δ Objective function ──────────────────────────────────── #>  #> ── Running bootstrap estimates on original data for model index: 1 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 2 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 3 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 4 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 5 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 6 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 7 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 8 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 9 ───────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 10 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 11 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 12 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 13 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 14 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 15 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 16 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 17 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 18 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 19 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 20 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 21 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 22 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 23 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 24 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 25 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 26 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 27 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 28 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 29 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 30 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 31 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 32 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 33 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 34 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 35 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 36 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 37 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 38 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 39 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 40 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 41 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 42 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 43 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 44 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 45 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 46 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 47 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 48 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 49 ──────────── #>   #>   #>  #> ── Running bootstrap estimates on original data for model index: 50 ──────────── #>   #>   #> → compress origData in nlmixr2 object, save 5952 #> Updated original fit object x   # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/buildcovInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Build covInfo list from varsVec and covarsVec — buildcovInfo","title":"Build covInfo list from varsVec and covarsVec — buildcovInfo","text":"Build covInfo list varsVec covarsVec","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/buildcovInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build covInfo list from varsVec and covarsVec — buildcovInfo","text":"","code":"buildcovInfo(varsVec, covarsVec)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/buildcovInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build covInfo list from varsVec and covarsVec — buildcovInfo","text":"varsVec character vector variables need added covarsVec character vector covariates need added","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/buildcovInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build covInfo list from varsVec and covarsVec — buildcovInfo","text":"covInfo list covariate info","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/buildcovInfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build covInfo list from varsVec and covarsVec — buildcovInfo","text":"Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/buildupatedUI.html","id":null,"dir":"Reference","previous_headings":"","what":"Build updated from the covariate and variable vector list — buildupatedUI","title":"Build updated from the covariate and variable vector list — buildupatedUI","text":"Build updated covariate variable vector list","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/buildupatedUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build updated from the covariate and variable vector list — buildupatedUI","text":"","code":"buildupatedUI(ui, varsVec, covarsVec, add = TRUE, indep = FALSE)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/buildupatedUI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build updated from the covariate and variable vector list — buildupatedUI","text":"ui compiled rxode2 nlmir2 model fit varsVec character vector variables need added covarsVec character vector covariates need added add boolean indicating covariate needs added removed indep boolean indicating covariates added independently, sequentially (append previous model). applicable adding covariate","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/buildupatedUI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build updated from the covariate and variable vector list — buildupatedUI","text":"updated ui added covariates","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/buildupatedUI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build updated from the covariate and variable vector list — buildupatedUI","text":"Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/covarSearchAuto.html","id":null,"dir":"Reference","previous_headings":"","what":"Stepwise Covariate Model-selection (SCM) method — covarSearchAuto","title":"Stepwise Covariate Model-selection (SCM) method — covarSearchAuto","text":"Stepwise Covariate Model-selection (SCM) method","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/covarSearchAuto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stepwise Covariate Model-selection (SCM) method — covarSearchAuto","text":"","code":"covarSearchAuto(   fit,   varsVec,   covarsVec,   pVal = list(fwd = 0.05, bck = 0.01),   catvarsVec = NULL,   searchType = c(\"scm\", \"forward\", \"backward\"),   restart = FALSE )"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/covarSearchAuto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stepwise Covariate Model-selection (SCM) method — covarSearchAuto","text":"fit nlmixr2 'fit' object varsVec list candidate variables covariates added covarsVec list candidate covariates need tested pVal named list names 'fwd' 'bck' specifying p-values forward backward searches, respectively catvarsVec character vector categorical covariates need added searchType one 'scm', 'forward' 'backward' specify covariate search method; default 'scm' restart boolean controls search restarted; default FALSE","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/covarSearchAuto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stepwise Covariate Model-selection (SCM) method — covarSearchAuto","text":"list summarizing covariate selection steps output; list \"summaryTable\" overall summary covariate selection well \"resFwd\" forward selection method \"resBck\" backward selection method.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/covarSearchAuto.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stepwise Covariate Model-selection (SCM) method — covarSearchAuto","text":"Vipul Mann, Matthew Fidler, Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/covarSearchAuto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stepwise Covariate Model-selection (SCM) method — covarSearchAuto","text":"","code":"# \\donttest{  one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- log(c(0, 2.7, 100)) # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45; label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  fit <- nlmixr2(one.cmt, nlmixr2data::theo_sd,\"focei\") #>   #>   #>   #> ℹ parameter labels from comments will be replaced by 'label()' #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 5952 #> → compress parHist in nlmixr2 object, save 2032 rxode2::.rxWithWd(tempdir(), {# with temporary directory  auto1 <- covarSearchAuto(fit, varsVec = c(\"ka\", \"cl\"),     covarsVec = c(\"WT\"))  }) #>  #> ── starting forward search... ────────────────────────────────────────────────── #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 5952 #> → compress parHist in nlmixr2 object, save 2760 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 5952 #> → compress parHist in nlmixr2 object, save 2624 #>  #> ── objf value did not improve, exiting the search ... ────────────────────────── #>  #> ── forward search complete ── #>  #> Error in inherits(fit, \"nlmixr2FitCore\"): object 'fit' not found  ## Note that this didn't include sex, add it to dataset and restart model   d <- nlmixr2data::theo_sd d$SEX <-0 d$SEX[d$ID<=6] <-1  fit <- nlmixr2(one.cmt, d, \"focei\") #>   #>   #>   #> ℹ parameter labels from comments will be replaced by 'label()' #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7184 #> → compress parHist in nlmixr2 object, save 2032  # This would restart if for some reason the search crashed:  rxode2::.rxWithWd(tempdir(), {# with temporary directory  auto2 <- covarSearchAuto(fit, varsVec = c(\"ka\", \"cl\"), covarsVec = c(\"WT\"),                 catvarsVec= c(\"SEX\"), restart = TRUE)  auto3 <- covarSearchAuto(fit, varsVec = c(\"ka\", \"cl\"), covarsVec = c(\"WT\"),                 catvarsVec=  c(\"SEX\"), restart = TRUE,                 searchType = \"forward\") }) #>  #> ── starting forward search... ────────────────────────────────────────────────── #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7096 #> → compress parHist in nlmixr2 object, save 2760 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7096 #> → compress parHist in nlmixr2 object, save 2624 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7096 #> → compress parHist in nlmixr2 object, save 2776 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7096 #> → compress parHist in nlmixr2 object, save 3016 #>  #> ── objf value did not improve, exiting the search ... ────────────────────────── #>  #> ── forward search complete ── #>  #> Error in inherits(fit, \"nlmixr2FitCore\"): object 'fit' not found  # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/foldgen.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified cross-validation fold generator function inspired from the caret — foldgen","title":"Stratified cross-validation fold generator function inspired from the caret — foldgen","text":"Stratified cross-validation fold generator function inspired caret","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/foldgen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified cross-validation fold generator function inspired from the caret — foldgen","text":"","code":"foldgen(data, nfold = 5, stratVar = NULL)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/foldgen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratified cross-validation fold generator function inspired from the caret — foldgen","text":"data data frame used analysis nfold number k-fold cross validations. Default 5 stratVar Stratification Variable. Default NULL ID used CV","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/foldgen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratified cross-validation fold generator function inspired from the caret — foldgen","text":"return dataframe fold column attached","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/foldgen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stratified cross-validation fold generator function inspired from the caret — foldgen","text":"Vishal Sarsani , caret","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/foldgen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratified cross-validation fold generator function inspired from the caret — foldgen","text":"","code":"# \\donttest{ d <- nlmixr2data::theo_sd d$SEX <-0 d$SEX[d$ID<=6] <-1   covarsVec <- c(\"WT\")   # Stratified cross-validation data with CMT df1 <- foldgen(d,nfold=5,stratVar=\"CMT\")  # Stratified cross-validation data with ID (individual) df2 <- foldgen(d,nfold=5,stratVar=NULL) # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/forwardSearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Forward covariate search — forwardSearch","title":"Forward covariate search — forwardSearch","text":"Forward covariate search","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/forwardSearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forward covariate search — forwardSearch","text":"","code":"forwardSearch(   varsVec,   covarsVec,   catvarsVec = NULL,   fit,   pVal = 0.05,   outputDir,   restart = FALSE )"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/forwardSearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forward covariate search — forwardSearch","text":"varsVec character vector variables need added covarsVec character vector covariates need added catvarsVec character vector categorical covariates need added fit nlmixr2 'fit' object pVal p-value used selecting covariates forward search outputDir name output directory stores covariate search result restart boolean controls search restarted; default FALSE","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/forwardSearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forward covariate search — forwardSearch","text":"returns updated 'fit' object end forward search table information covariates tested","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/forwardSearch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Forward covariate search — forwardSearch","text":"Vipul Mann, Matthew Fidler, Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/horseshoeSummardf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Horseshoe summary posterior estimates — horseshoeSummardf","title":"Create Horseshoe summary posterior estimates — horseshoeSummardf","text":"Create Horseshoe summary posterior estimates","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/horseshoeSummardf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Horseshoe summary posterior estimates — horseshoeSummardf","text":"","code":"horseshoeSummardf(fit, covarsVec, ...)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/horseshoeSummardf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Horseshoe summary posterior estimates — horseshoeSummardf","text":"fit compiled rxode2 nlmir2 model fit covarsVec character vector covariates need added ... parameters passed brm(): warmup = 1000, iter = 2000, chains = 4, cores = 4, control = list(adapt_delta = 0.99, max_treedepth = 15)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/horseshoeSummardf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Horseshoe summary posterior estimates — horseshoeSummardf","text":"Horse shoe Summary data frame covariates","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/horseshoeSummardf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Horseshoe summary posterior estimates — horseshoeSummardf","text":"Vishal Sarsani, Christian Bartels","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/horseshoeSummardf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Horseshoe summary posterior estimates — horseshoeSummardf","text":"","code":"# \\donttest{  one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- log(c(0, 2.7, 100)) # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45; label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  d <- nlmixr2data::theo_sd fit <- nlmixr2(one.cmt, d, \"focei\") #>   #>   #>   #> ℹ parameter labels from comments will be replaced by 'label()' #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 5952 #> → compress parHist in nlmixr2 object, save 2032 covarsVec <- c(\"WT\")  # Horseshoe summary posterior estimates:  #hsDf <- horseshoeSummardf(fit,covarsVec,cores=2) #brms sometimes may throw a Error in sink(type = “output”) #Issue Should be fixed by uninstalling and re-installing rstan  # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoCoefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Final lasso coefficients after finding optimal t — lassoCoefficients","title":"Return Final lasso coefficients after finding optimal t — lassoCoefficients","text":"Return Final lasso coefficients finding optimal t","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoCoefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Final lasso coefficients after finding optimal t — lassoCoefficients","text":"","code":"lassoCoefficients(   fit,   varsVec,   covarsVec,   catvarsVec,   constraint = 1e-08,   stratVar = NULL,   ... )"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoCoefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Final lasso coefficients after finding optimal t — lassoCoefficients","text":"fit nlmixr2 fit. varsVec character vector variables need added covarsVec character vector covariates need added catvarsVec character vector categorical covariates need added constraint theta cutoff. cutoff theta fixed zero stratVar variable stratify cross-validation ... parameters passed optimalTvaluelasso","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoCoefficients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Final lasso coefficients after finding optimal t — lassoCoefficients","text":"return data frame final lasso coefficients","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoCoefficients.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return Final lasso coefficients after finding optimal t — lassoCoefficients","text":"Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoCoefficients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Final lasso coefficients after finding optimal t — lassoCoefficients","text":"","code":"# \\donttest{  one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- log(c(0, 2.7, 100)) # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45; label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  d <- nlmixr2data::theo_sd d$SEX <-0 d$SEX[d$ID<=6] <-1  fit <- nlmixr2(one.cmt, d, \"focei\") #>   #>   #>   #> ℹ parameter labels from comments will be replaced by 'label()' #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7184 #> → compress parHist in nlmixr2 object, save 2032 varsVec <- c(\"ka\",\"cl\",\"v\") covarsVec <- c(\"WT\") catvarsVec <- c(\"SEX\")   # Lasso coefficients:  lassoDf <- lassoCoefficients(fit,varsVec,covarsVec,catvarsVec,constraint=1e-08,stratVar = NULL) #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3712 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7144 #> → compress parHist in nlmixr2 object, save 3416 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 4384 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3424 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 4272 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3544 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.05 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3592 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 5120 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 4592 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3488 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6648 #> → compress parHist in nlmixr2 object, save 4368 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3488 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7120 #> → compress parHist in nlmixr2 object, save 4008 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 5304 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 3640 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6624 #> → compress parHist in nlmixr2 object, save 3424 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3944 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.15 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 4112 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3784 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7104 #> → compress parHist in nlmixr2 object, save 5168 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 3688 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6640 #> → compress parHist in nlmixr2 object, save 3600 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 4584 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7120 #> → compress parHist in nlmixr2 object, save 3512 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7144 #> → compress parHist in nlmixr2 object, save 3520 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 4472 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6592 #> → compress parHist in nlmixr2 object, save 4656 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3536 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.25 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6984 #> → compress parHist in nlmixr2 object, save 3160  # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoSummardf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Lasso summary posterior estimates — lassoSummardf","title":"Create Lasso summary posterior estimates — lassoSummardf","text":"Create Lasso summary posterior estimates","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoSummardf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Lasso summary posterior estimates — lassoSummardf","text":"","code":"lassoSummardf(fit, covarsVec, ...)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoSummardf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Lasso summary posterior estimates — lassoSummardf","text":"fit compiled rxode2 nlmir2 model fit covarsVec character vector covariates need added ... parameters passed brm(): warmup = 1000, iter = 2000, chains = 4, cores = 4, control = list(adapt_delta = 0.99, max_treedepth = 15)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoSummardf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Lasso summary posterior estimates — lassoSummardf","text":"Horse shoe Summary data frame covariates","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoSummardf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Lasso summary posterior estimates — lassoSummardf","text":"Vishal Sarsani, Christian Bartels","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/lassoSummardf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Lasso summary posterior estimates — lassoSummardf","text":"","code":"# \\donttest{  one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- log(c(0, 2.7, 100)) # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45; label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  d <- nlmixr2data::theo_sd fit <- nlmixr2(one.cmt, d, \"focei\") #>   #>   #>   #> ℹ parameter labels from comments will be replaced by 'label()' #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 5952 #> → compress parHist in nlmixr2 object, save 2032 covarsVec <- c(\"WT\")  # Horseshoe summary posterior estimates:  #lassoDf <- lassoSummardf(fit,covarsVec,cores=2) #brms sometimes may throw a Error in sink(type = “output”) #Issue Should be fixed by uninstalling and re-installing rstan # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/normalizedData.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return data of normalized covariates — normalizedData","title":"Function to return data of normalized covariates — normalizedData","text":"Function return data normalized covariates","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/normalizedData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return data of normalized covariates — normalizedData","text":"","code":"normalizedData(data, covarsVec, replace = TRUE)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/normalizedData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return data of normalized covariates — normalizedData","text":"data dataframe covariates normalize covarsVec list covariate names (parameters) need estimates replace replace original covariate data normalized data easier updated model.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/normalizedData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to return data of normalized covariates — normalizedData","text":"data frame normalized covariates","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/normalizedData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to return data of normalized covariates — normalizedData","text":"Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/normalizedData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to return data of normalized covariates — normalizedData","text":"","code":"# \\donttest{ d <- nlmixr2data::theo_sd d$SEX <-0 d$SEX[d$ID<=6] <-1  covarsVec <- c(\"WT\")   # Normalized covariate (replaced) df1 <- normalizedData(d,covarsVec,replace=TRUE)  # Normalized covariate (without replacement) df2 <- normalizedData(d,covarsVec,replace=FALSE) # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/optimUnisampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from uniform distribution by optim — optimUnisampling","title":"Sample from uniform distribution by optim — optimUnisampling","text":"Sample uniform distribution optim","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/optimUnisampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from uniform distribution by optim — optimUnisampling","text":"","code":"optimUnisampling(xvec, N = 1000, medValue, floorT = TRUE)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/optimUnisampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from uniform distribution by optim — optimUnisampling","text":"xvec vector min,max values . Ex:c(10,20) N Desired number values medValue Desired Median floorT boolean indicating whether round ","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/optimUnisampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from uniform distribution by optim — optimUnisampling","text":"Samples approx desired median.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/optimUnisampling.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample from uniform distribution by optim — optimUnisampling","text":"Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/optimUnisampling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample from uniform distribution by optim — optimUnisampling","text":"","code":"# \\donttest{ # Simulate 1000 creatine clearance values with median of 71.7 within range of c(6.7,140) creatCl <- optimUnisampling(xvec=c(6.7,140),N=1000,medValue = 71.7,floorT=FALSE) # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/preconditionFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Linearly re-parameterize the model to be less sensitive to rounding errors — preconditionFit","title":"Linearly re-parameterize the model to be less sensitive to rounding errors — preconditionFit","text":"Linearly re-parameterize model less sensitive rounding errors","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/preconditionFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linearly re-parameterize the model to be less sensitive to rounding errors — preconditionFit","text":"","code":"preconditionFit(fit, estType = c(\"full\", \"posthoc\", \"none\"), ntry = 10L)"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/preconditionFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linearly re-parameterize the model to be less sensitive to rounding errors — preconditionFit","text":"fit nlmixr2 fit preconditioned estType fit linearly reparameterized, \"full\" estimation, \"posthoc\" estimation simply estimation covariance matrix \"none\" fit updated ntry number tries giving pre-conditioned covariance estimate","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/preconditionFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linearly re-parameterize the model to be less sensitive to rounding errors — preconditionFit","text":"nlmixr2 fit object preconditioned stabilize variance/covariance calculation","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/preconditionFit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linearly re-parameterize the model to be less sensitive to rounding errors — preconditionFit","text":"Aoki Y, Nordgren R, Hooker AC. Preconditioning Nonlinear Mixed Effects Models Stabilisation Variance-Covariance Matrix Computations. AAPS J. 2016;18(2):505-518. doi:10.1208/s12248-016-9866-5","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. nlmixr2est nlmixr, nlmixr2, nlmixrWithTiming, setCov rxode2 ini, model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/regularmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Regular lasso model — regularmodel","title":"Regular lasso model — regularmodel","text":"Regular lasso model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/regularmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regular lasso model — regularmodel","text":"","code":"regularmodel(   fit,   varsVec,   covarsVec,   catvarsVec,   constraint = 1e-08,   lassotype = \"regular\",   stratVar = NULL,   ... )"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/regularmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regular lasso model — regularmodel","text":"fit nlmixr2 fit. varsVec character vector variables need added covarsVec character vector covariates need added catvarsVec character vector categorical covariates need added constraint theta cutoff. cutoff theta fixed zero. lassotype must  'regular' , 'adaptive', 'adjusted' stratVar variable stratify cross-validation. ... parameters passed optimalTvaluelasso","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/regularmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regular lasso model — regularmodel","text":"return fit selected lasso coefficients","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/regularmodel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Regular lasso model — regularmodel","text":"Vishal Sarsani","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/regularmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regular lasso model — regularmodel","text":"","code":"# \\donttest{  one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- log(c(0, 2.7, 100)) # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45; label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  d <- nlmixr2data::theo_sd d$SEX <-0 d$SEX[d$ID<=6] <-1  fit <- nlmixr2(one.cmt, d, \"focei\") #>   #>   #>   #> ℹ parameter labels from comments will be replaced by 'label()' #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7184 #> → compress parHist in nlmixr2 object, save 2032 varsVec <- c(\"ka\",\"cl\",\"v\") covarsVec <- c(\"WT\") catvarsVec <- c(\"SEX\")   # Model fit with regular lasso coefficients:  lassoDf <- regularmodel(fit,varsVec,covarsVec,catvarsVec) #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7144 #> → compress parHist in nlmixr2 object, save 3416 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6624 #> → compress parHist in nlmixr2 object, save 4016 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6640 #> → compress parHist in nlmixr2 object, save 3344 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7096 #> → compress parHist in nlmixr2 object, save 3872 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3256 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3712 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.05 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6576 #> → compress parHist in nlmixr2 object, save 3336 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3536 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7104 #> → compress parHist in nlmixr2 object, save 3448 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 4344 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3168 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3336 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6624 #> → compress parHist in nlmixr2 object, save 3632 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3712 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 3880 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 4496 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 4968 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7120 #> → compress parHist in nlmixr2 object, save 3704 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.15 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3400 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 4376 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3184 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 3424 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3448 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6624 #> → compress parHist in nlmixr2 object, save 4512 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6568 #> → compress parHist in nlmixr2 object, save 3480 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3536 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6592 #> → compress parHist in nlmixr2 object, save 4304 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3496 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3360 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7160 #> → compress parHist in nlmixr2 object, save 3480 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.25 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6984 #> → compress parHist in nlmixr2 object, save 3160 #>   #>   #> → loading into symengine environment... #> → pruning branches (`if`/`else`) of full model... #> ✔ done #> → calculate jacobian #> → calculate ∂(f)/∂(η) #> → calculate ∂(R²)/∂(η) #> → finding duplicate expressions in inner model... #> → optimizing duplicate expressions in inner model... #> → finding duplicate expressions in EBE model... #> → optimizing duplicate expressions in EBE model... #> → compiling inner model... #>   #> ✔ done #> → finding duplicate expressions in FD model... #> → compiling EBE model... #>   #> ✔ done #> → compiling events FD model... #>   #> ✔ done #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7096 #> → compress parHist in nlmixr2 object, save 2352 # Model fit with adaptive lasso coefficients:  lassoDf <- regularmodel(fit,varsVec,covarsVec,catvarsVec,lassotype='adaptive') #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 4328 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3536 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7144 #> → compress parHist in nlmixr2 object, save 4504 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3088 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 4032 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 3376 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3808 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.05 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 4472 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 5120 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7072 #> → compress parHist in nlmixr2 object, save 3816 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6648 #> → compress parHist in nlmixr2 object, save 3832 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 4720 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 4320 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7144 #> → compress parHist in nlmixr2 object, save 4048 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6584 #> → compress parHist in nlmixr2 object, save 5848 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3544 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7144 #> → compress parHist in nlmixr2 object, save 3800 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7120 #> → compress parHist in nlmixr2 object, save 4088 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.15 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 4384 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7144 #> → compress parHist in nlmixr2 object, save 3448 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7160 #> → compress parHist in nlmixr2 object, save 3512 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6584 #> → compress parHist in nlmixr2 object, save 3432 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3560 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6624 #> → compress parHist in nlmixr2 object, save 3656 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3536 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6624 #> → compress parHist in nlmixr2 object, save 3304 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3704 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7120 #> → compress parHist in nlmixr2 object, save 3512 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6632 #> → compress parHist in nlmixr2 object, save 4056 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3344 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.25 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6984 #> → compress parHist in nlmixr2 object, save 3160 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7160 #> → compress parHist in nlmixr2 object, save 4160 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3480 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7080 #> → compress parHist in nlmixr2 object, save 4328 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6608 #> → compress parHist in nlmixr2 object, save 3664 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3536 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 3600 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.05 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 4528 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6592 #> → compress parHist in nlmixr2 object, save 3432 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 3888 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3528 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7160 #> → compress parHist in nlmixr2 object, save 3408 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 4344 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3168 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6576 #> → compress parHist in nlmixr2 object, save 3752 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3560 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3736 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7160 #> → compress parHist in nlmixr2 object, save 7320 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7144 #> → compress parHist in nlmixr2 object, save 4128 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6632 #> → compress parHist in nlmixr2 object, save 3760 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3496 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.15 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 3368 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3512 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7120 #> → compress parHist in nlmixr2 object, save 3912 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 3672 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3848 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 3344 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6592 #> → compress parHist in nlmixr2 object, save 3504 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3552 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3752 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6640 #> → compress parHist in nlmixr2 object, save 3888 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3488 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3408 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3344 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.25 #>   #>   #> Theta reset (zero/bad gradient values); Switch to bobyqa #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6984 #> → compress parHist in nlmixr2 object, save 9024 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7096 #> → compress parHist in nlmixr2 object, save 2352 # Model fit with adaptive-adjusted lasso coefficients:  lassoDf <- regularmodel(fit,varsVec,covarsVec,catvarsVec, lassotype='adjusted') #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6984 #> → compress parHist in nlmixr2 object, save 3168 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 3544 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3952 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3920 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6656 #> → compress parHist in nlmixr2 object, save 4568 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3536 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7160 #> → compress parHist in nlmixr2 object, save 3808 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.05 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7104 #> → compress parHist in nlmixr2 object, save 3440 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3496 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6640 #> → compress parHist in nlmixr2 object, save 3728 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3488 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3768 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3208 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6600 #> → compress parHist in nlmixr2 object, save 3568 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3552 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7160 #> → compress parHist in nlmixr2 object, save 3432 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7128 #> → compress parHist in nlmixr2 object, save 3792 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6560 #> → compress parHist in nlmixr2 object, save 4672 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3576 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6640 #> → compress parHist in nlmixr2 object, save 3856 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3504 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7152 #> → compress parHist in nlmixr2 object, save 4264 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3168 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.15 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6624 #> → compress parHist in nlmixr2 object, save 3760 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3504 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7144 #> → compress parHist in nlmixr2 object, save 3400 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3200 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 5008 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7104 #> → compress parHist in nlmixr2 object, save 3464 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3232 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7136 #> → compress parHist in nlmixr2 object, save 3792 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3192 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 1 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7144 #> → compress parHist in nlmixr2 object, save 4040 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3184 #>   #>   #> ✔ Estimation complete for the fold number : 1 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 2 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6632 #> → compress parHist in nlmixr2 object, save 3504 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3488 #>   #>   #> ✔ Estimation complete for the fold number : 2 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 3 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7112 #> → compress parHist in nlmixr2 object, save 3680 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3216 #>   #>   #> ✔ Estimation complete for the fold number : 3 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 4 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6616 #> → compress parHist in nlmixr2 object, save 5448 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3520 #>   #>   #> ✔ Estimation complete for the fold number : 4 #> ✔ Training and Testing data sets successfully created for cross-validation for fold number 5 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7088 #> → compress parHist in nlmixr2 object, save 3416 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 3224 #>   #>   #> ✔ Estimation complete for the fold number : 5 #> ✔ Cross-validation finished for the t-value : 0.25 #>   #>   #> Theta reset (zero/bad gradient values); Switch to bobyqa #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 6984 #> → compress parHist in nlmixr2 object, save 8616 #>   #>   #> → Calculating residuals/tables #> ✔ done #> → compress origData in nlmixr2 object, save 7096 #> → compress parHist in nlmixr2 object, save 2352 # }"},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/theoFitOde.html","id":null,"dir":"Reference","previous_headings":"","what":"Example single dose Theophylline ODE model — theoFitOde","title":"Example single dose Theophylline ODE model — theoFitOde","text":"nlmixr2 model pre-run can used package testing development.  regenerated whenever binaries nlmixr2extra created.  binary incompatability fit objects, simple rerun installation fix nlmixr2 fit object.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2extra/reference/theoFitOde.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example single dose Theophylline ODE model — theoFitOde","text":"(modified) data frame  132 rows 22 columns. ID Patient identifier TIME Time (hr) DV Dependent variable (concentration) PRED Predictions without subject variability RES Population Residual WRES Weighted Residuals FO assumption IPRED Individual Predictions IRES Individual Residuals IWRES Individual Weighted Residuals CPRED Conditional Prediction FOCE assumption CRES Conditional Residuals FOCE assumption CWRES Conditional Weighted Residuals FOCE assumption eta.ka subject changes ka eta.cl subject changes v depot amount depot compartment center amount central compartment ka Individual ka values cl Individual cl values v Individual volume distribution tad Time dose dosenum Dose number","code":""}]
